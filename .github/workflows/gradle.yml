# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - uses : actions/checkout@v3
    - run : touch ./src/main/resources/application.properties
    - run : echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
    - run : cat ./src/main/resources/application.properties
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew clean build
    
    - name : Make Directory for deliver
      run : mkdir deploy
    
    - name : Copy Jar
      run : cp ./build/libs/*.jar ./deploy/
      
    - name : Make zip file
      run : zip -r -qq -j ./springboot-intro-build.zip ./deploy
      
    - name : Deliver to AWS S3
      env : 
        AWS_ACCESS_KEY_ID : ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KET : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run : |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \
        ./springboot-intro-build.zip s3: //springboot-intro-build/
        
